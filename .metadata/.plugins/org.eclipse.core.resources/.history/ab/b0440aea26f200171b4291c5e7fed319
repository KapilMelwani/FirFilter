
/*
 * main.c ~ UNROLLED FIR FILTER
 *
 *  Created on: Jan 4, 2018
 *      Author: Kapil Ashok Melwani Chugani
 *      Subject: Arquitecturas Avanzadas y de Propósito Específico
 *      Institution: Universidad de La Laguna - ETSII (2017)
 */



#include <stdio.h>
#include <stdlib.h>

#define COEF 5
#define SAMPLES 5

float* inicializacion_coeficientes(void)
{
    float* vector_coeficientes = (float *)malloc(COEF);
    int i=0;
    for(i=0;i<COEF;i++)
        vector_coeficientes = 1/COEF;
    return vector_coeficientes;
}

int main(void)
{
    float* vector_in = (float*) malloc(SAMPLES+COEF-1);
    float* vector_coef;
    float* vector_out = (float*) malloc(SAMPLES+COEF-1);
    int i,j;
    float sum0 = 0;

    vector_coef = inicializacion_coeficientes();

    sum0 += vector_in[0] * vector_coef[0] + vector_in[1] * vector_coef[1] + vector_in[2] * vector_coef[2] + vector_in[3] * vector_coef[3] + vector_in[4] * vector_coef[4] + vector_in[5] * vector_coef[5] + vector_in[1] * vector_coef[0] + vector_in[2] * vector_coef[1] + vector_in[3] * vector_coef[2] + vector_in[4] * vector_coef[3] + vector_in[5] * vector_coef[4] + vector_in[0] * vector_coef[5];
    vector_out[0] = (float)sum0;

    for(i =0;i<5;i++)
        printf("%f\n",vector_out[i]);
    free(vector_coef);
    free(vector_in);
    free(vector_out);

    return 0;
}
